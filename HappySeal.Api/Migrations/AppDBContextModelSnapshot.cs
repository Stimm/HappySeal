// <auto-generated />
using System;
using HappySeal.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HappySeal.Api.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HappySeal.Shared.Domain.Component", b =>
                {
                    b.Property<int>("ComponentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComponentId"));

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<string>("Measurement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.HasKey("ComponentId");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Components");

                    b.HasData(
                        new
                        {
                            ComponentId = 1,
                            IngredientId = 1,
                            Measurement = "ml",
                            RecipeId = 1,
                            amount = 5
                        },
                        new
                        {
                            ComponentId = 2,
                            IngredientId = 2,
                            Measurement = "small",
                            RecipeId = 1,
                            amount = 2
                        },
                        new
                        {
                            ComponentId = 3,
                            IngredientId = 3,
                            Measurement = "tbsp",
                            RecipeId = 1,
                            amount = 2
                        },
                        new
                        {
                            ComponentId = 4,
                            IngredientId = 4,
                            Measurement = "tbs",
                            RecipeId = 1,
                            amount = 4
                        },
                        new
                        {
                            ComponentId = 5,
                            IngredientId = 5,
                            Measurement = "tbsp",
                            RecipeId = 1,
                            amount = 1
                        },
                        new
                        {
                            ComponentId = 6,
                            IngredientId = 6,
                            Measurement = "small ",
                            RecipeId = 1,
                            amount = 1
                        },
                        new
                        {
                            ComponentId = 7,
                            IngredientId = 7,
                            Measurement = "tbs",
                            RecipeId = 1,
                            amount = 1
                        },
                        new
                        {
                            ComponentId = 8,
                            IngredientId = 8,
                            Measurement = "tsp",
                            RecipeId = 1,
                            amount = 3
                        },
                        new
                        {
                            ComponentId = 9,
                            IngredientId = 9,
                            Measurement = "Packs",
                            RecipeId = 2,
                            amount = 2
                        },
                        new
                        {
                            ComponentId = 10,
                            IngredientId = 10,
                            Measurement = "Packs",
                            RecipeId = 2,
                            amount = 2
                        },
                        new
                        {
                            ComponentId = 11,
                            IngredientId = 11,
                            Measurement = "Medium",
                            RecipeId = 2,
                            amount = 3
                        },
                        new
                        {
                            ComponentId = 12,
                            IngredientId = 12,
                            Measurement = "Cups",
                            RecipeId = 2,
                            amount = 2
                        },
                        new
                        {
                            ComponentId = 13,
                            IngredientId = 13,
                            Measurement = "g",
                            RecipeId = 2,
                            amount = 100
                        },
                        new
                        {
                            ComponentId = 14,
                            IngredientId = 14,
                            Measurement = "Sheets",
                            RecipeId = 2,
                            amount = 2
                        },
                        new
                        {
                            ComponentId = 15,
                            IngredientId = 15,
                            Measurement = "Cups",
                            RecipeId = 2,
                            amount = 2
                        },
                        new
                        {
                            ComponentId = 16,
                            IngredientId = 16,
                            Measurement = "Kg",
                            RecipeId = 2,
                            amount = 1
                        },
                        new
                        {
                            ComponentId = 17,
                            IngredientId = 17,
                            Measurement = "Cup",
                            RecipeId = 2,
                            amount = 1
                        });
                });

            modelBuilder.Entity("HappySeal.Shared.Domain.Cuisene", b =>
                {
                    b.Property<int>("CuiseneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CuiseneId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("CuiseneId");

                    b.ToTable("Cuisenes");

                    b.HasData(
                        new
                        {
                            CuiseneId = 1,
                            Name = "Korean"
                        },
                        new
                        {
                            CuiseneId = 2,
                            Name = "Irish"
                        },
                        new
                        {
                            CuiseneId = 3,
                            Name = "Australian"
                        });
                });

            modelBuilder.Entity("HappySeal.Shared.Domain.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("IngredientId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            IngredientId = 1,
                            Name = "Oil"
                        },
                        new
                        {
                            IngredientId = 2,
                            Name = "Egg plant"
                        },
                        new
                        {
                            IngredientId = 3,
                            Name = "Soy sause"
                        },
                        new
                        {
                            IngredientId = 4,
                            Name = "Rice wine vinegar"
                        },
                        new
                        {
                            IngredientId = 5,
                            Name = "Mapel syrip"
                        },
                        new
                        {
                            IngredientId = 6,
                            Name = "Garlic"
                        },
                        new
                        {
                            IngredientId = 7,
                            Name = "Ginger"
                        },
                        new
                        {
                            IngredientId = 8,
                            Name = "Gochujang"
                        },
                        new
                        {
                            IngredientId = 9,
                            Name = "Bacon"
                        },
                        new
                        {
                            IngredientId = 10,
                            Name = "Mushrooms"
                        },
                        new
                        {
                            IngredientId = 11,
                            Name = "Peppers"
                        },
                        new
                        {
                            IngredientId = 12,
                            Name = "Cream"
                        },
                        new
                        {
                            IngredientId = 13,
                            Name = "Spaghetti"
                        },
                        new
                        {
                            IngredientId = 14,
                            Name = "Soft crust pastory"
                        },
                        new
                        {
                            IngredientId = 15,
                            Name = "BeefStock"
                        },
                        new
                        {
                            IngredientId = 16,
                            Name = "Beef"
                        },
                        new
                        {
                            IngredientId = 17,
                            Name = "Red wine"
                        });
                });

            modelBuilder.Entity("HappySeal.Shared.Domain.Meal", b =>
                {
                    b.Property<int>("MealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealId"));

                    b.Property<int>("CookingTime")
                        .HasColumnType("int");

                    b.Property<int>("CuiseneId")
                        .HasColumnType("int");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageSmall")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Spicyness")
                        .HasColumnType("int");

                    b.HasKey("MealId");

                    b.HasIndex("CuiseneId");

                    b.ToTable("Meals");

                    b.HasData(
                        new
                        {
                            MealId = 1,
                            CookingTime = 40,
                            CuiseneId = 1,
                            Difficulty = 2,
                            Discription = "Lightly spicy Korien chilly, soft eggplant side dish",
                            Image = "",
                            ImageSmall = "",
                            Instructions = "1: Cut eggplant into 2 ince triangles; 2: Fry/Steam till soft; 3: Make sause; 4: Fry all together",
                            Name = "gochujang eggplant",
                            Spicyness = 2
                        },
                        new
                        {
                            MealId = 2,
                            CookingTime = 80,
                            CuiseneId = 2,
                            Difficulty = 2,
                            Discription = "Ritch creemy pastasause with bacon, mushrooms and peppers",
                            Image = "",
                            ImageSmall = "",
                            Instructions = "1: Make Daddies Spaghetti. 2: Eat Daddies spaghetti",
                            Name = "Daddies spaghetti",
                            Spicyness = 1
                        },
                        new
                        {
                            MealId = 3,
                            CookingTime = 240,
                            CuiseneId = 3,
                            Difficulty = 3,
                            Discription = "Flaky ritch pie snacks with a deep meaty beef flavor",
                            Image = "",
                            ImageSmall = "",
                            Instructions = "1: Sprinkle beef with 1/2 tsp salt and pepper. 2: Heat 1 tbsp oil in a large heavy based pot over high heat. 3:Add 1/3 of the beef and brown aggressively all over, then remove. 4: Repeat with remaining beef, adding more oil if needed. 5: Turn stove down to medium high. 6: Add garlic and onion, cook 3 minutes. 7: Add flour, stir through. 8: Slowly add beef stock while stirring constantly. 9: Once flour is dissolved, add wine, tomato paste, Worcestershire, pepper and bay leaves. 10: Return beef into pot, cover with lid, adjust heat so it’s simmering gently. 11: Simmer 1 hr 45 minutes. Remove lid, increase heat slightly and simmer 30 – 45 minutes, stirring regularly, or until beef is fork tender and liquid reduces down to a thickish gravy, just about covering beef (see video). Do not reduce liquid too much – thickens more as it cools & in pie. 12: Remove from stove, cover and cool filling (I usually leave overnight).",
                            Name = "Auzzy meat pies",
                            Spicyness = 0
                        });
                });

            modelBuilder.Entity("HappySeal.Shared.Domain.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.HasKey("MenuId");

                    b.ToTable("Menu");

                    b.HasData(
                        new
                        {
                            MenuId = 1
                        });
                });

            modelBuilder.Entity("HappySeal.Shared.Domain.MenuItem", b =>
                {
                    b.Property<int>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItemId"));

                    b.Property<DateTime?>("DateLastUsed")
                        .HasColumnType("datetime2");

                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.HasKey("MenuItemId");

                    b.HasIndex("MealId");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            MenuItemId = 1,
                            MealId = 1,
                            MenuId = 1
                        },
                        new
                        {
                            MenuItemId = 2,
                            MealId = 2,
                            MenuId = 1
                        },
                        new
                        {
                            MenuItemId = 3,
                            MealId = 3,
                            MenuId = 1
                        });
                });

            modelBuilder.Entity("HappySeal.Shared.Domain.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeId"));

                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.HasKey("RecipeId");

                    b.HasIndex("MealId")
                        .IsUnique();

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            MealId = 1
                        },
                        new
                        {
                            RecipeId = 2,
                            MealId = 2
                        },
                        new
                        {
                            RecipeId = 3,
                            MealId = 3
                        });
                });

            modelBuilder.Entity("HappySeal.Shared.Domain.Component", b =>
                {
                    b.HasOne("HappySeal.Shared.Domain.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HappySeal.Shared.Domain.Recipe", null)
                        .WithMany("Components")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("HappySeal.Shared.Domain.Meal", b =>
                {
                    b.HasOne("HappySeal.Shared.Domain.Cuisene", "Cuisene")
                        .WithMany()
                        .HasForeignKey("CuiseneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuisene");
                });

            modelBuilder.Entity("HappySeal.Shared.Domain.MenuItem", b =>
                {
                    b.HasOne("HappySeal.Shared.Domain.Meal", "Meal")
                        .WithMany()
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HappySeal.Shared.Domain.Menu", null)
                        .WithMany("MenueItems")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("HappySeal.Shared.Domain.Recipe", b =>
                {
                    b.HasOne("HappySeal.Shared.Domain.Meal", null)
                        .WithOne("Recipe")
                        .HasForeignKey("HappySeal.Shared.Domain.Recipe", "MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HappySeal.Shared.Domain.Meal", b =>
                {
                    b.Navigation("Recipe")
                        .IsRequired();
                });

            modelBuilder.Entity("HappySeal.Shared.Domain.Menu", b =>
                {
                    b.Navigation("MenueItems");
                });

            modelBuilder.Entity("HappySeal.Shared.Domain.Recipe", b =>
                {
                    b.Navigation("Components");
                });
#pragma warning restore 612, 618
        }
    }
}
